/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.one.conversor.principal;

import com.google.gson.FieldNamingPolicy;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.one.conversor.modelos.CarteleraCotizaciones;

import com.one.conversor.modelos.conexion.ExchangeRateClient;
import javax.swing.JLabel;

/**
 *
 * @author Herna
 */
public class JP_Conversor extends javax.swing.JFrame {

    private static CarteleraCotizaciones cotizaciones = new CarteleraCotizaciones();
   // se crea una instancia de los metodos de la api
    private static ExchangeRateClient request = new ExchangeRateClient();

    //constructor ademas se actualiza la cotizacion de todos los pares importantes
    public JP_Conversor() {
        initComponents();
        ejecucionCotizaciones();
        actualizarCartelera();

    }

    
    private void ejecucionCotizaciones() {
        
        //metodo para sacar las cotizaciones de 5 pares
        String json = request.request();
        // se crea un Gson para transforamr la info en json
        Gson gson = new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.IDENTITY.UPPER_CASE_WITH_UNDERSCORES).create();
        //se agrega a la cartelera de cotizaciones las lasted
        cotizaciones = gson.fromJson(json, CarteleraCotizaciones.class);
        // se agregan a las variables (labels)
        System.out.println(cotizaciones);
    }

    private void actualizarCartelera() {
        //cambio el valor de las variables
        resEur.setText(String.valueOf(cotizaciones.getEur()));
        resAud.setText(String.valueOf(cotizaciones.getAud()));
        resGbp.setText(String.valueOf(cotizaciones.getGbp()));
        resJpy.setText(String.valueOf(cotizaciones.getJpy()));
        resUsd.setText(String.valueOf(cotizaciones.getUsd()));
    }
    // conversion automatica
    private void Conversion(String par, String par2, String valor) {
        String cotizacion = obteniendoCotizacion(par,par2);
        double value=0;
        double coti=0;
        //por si hay un problema en la conversion
        try {
            System.out.println("try"
                    + "");
            value = Double.parseDouble(valor);
            System.out.println("value"+value);
            
            coti = Double.parseDouble(cotizacion);
            System.out.println("coti"+ coti);
        } catch (NumberFormatException e) {
            malConversion("Error en valor");
        } catch (NullPointerException ex) {
            malConversion("El valor esta vacio");
        }
        // se calcula y se formatea a 
        double total = value * coti;
        String cotizacionFinal = String.format("%.2f", total);
        //si no es 0 se emite un mensaje sino se envia un error al panel
        if(total!=0)MuestraConversion((""+ cotizacionFinal ),par,par2);
        else malConversion("Error en valor");
        
    }
    // metodo para encontrar la cotizacion de los pares. 
    private String obteniendoCotizacion(String par, String par2){
         //trae la cotizacion de los dos pares
            String Json = request.requestCotizacion(par, par2);
            return Json;
    }
    //resultado de la conversion visto en la pantalla
    private void MuestraConversion(String valor, String par , String par2) {
        textResult.setText(valor+" "+par+"/"+par2 );
    }
    //mensajes de error
    private void malConversion(String valor) {
        textResult.setText(valor);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        resAud = new javax.swing.JLabel();
        resJpy = new javax.swing.JLabel();
        Labelusd = new javax.swing.JLabel();
        button1 = new java.awt.Button();
        LabelEUR = new javax.swing.JLabel();
        LabelGBP = new javax.swing.JLabel();
        LabelAUD = new javax.swing.JLabel();
        LabelJPY = new javax.swing.JLabel();
        resEur = new javax.swing.JLabel();
        resGbp = new javax.swing.JLabel();
        resUsd = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        choice2 = new java.awt.Choice();
        ButtonConversion = new java.awt.Button();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        choice1 = new java.awt.Choice();
        textCantidad = new java.awt.TextField();
        textResult = new javax.swing.JLabel();
        ButtonConversion1 = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        resAud.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        resAud.setText("--");

        resJpy.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        resJpy.setText("--");

        Labelusd.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        Labelusd.setText("USD");

        button1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        button1.setFont(new java.awt.Font("Ebrima", 0, 24)); // NOI18N
        button1.setLabel("Refresh");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        LabelEUR.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        LabelEUR.setText("EUR");

        LabelGBP.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        LabelGBP.setText("GBP");

        LabelAUD.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        LabelAUD.setText("AUD");

        LabelJPY.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        LabelJPY.setText("JPY");

        resEur.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        resEur.setText("--");

        resGbp.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        resGbp.setText("--");

        resUsd.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        resUsd.setText("--");

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Conversor de Monedas");
        jLabel1.setAlignmentY(0.0F);
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        choice2.addItem("AED");
        choice2.addItem("AFN");
        choice2.addItem("ALL");
        choice2.addItem("AMD");
        choice2.addItem("ANG");
        choice2.addItem("AOA");
        choice2.addItem("ARS");
        choice2.addItem("AUD");
        choice2.addItem("AWG");
        choice2.addItem("AZN");
        choice2.addItem("BAM");
        choice2.addItem("BBD");
        choice2.addItem("BDT");
        choice2.addItem("BGN");
        choice2.addItem("BHD");
        choice2.addItem("BIF");
        choice2.addItem("BMD");
        choice2.addItem("BND");
        choice2.addItem("BOB");
        choice2.addItem("BRL");
        choice2.addItem("BSD");
        choice2.addItem("BTN");
        choice2.addItem("BWP");
        choice2.addItem("BYN");
        choice2.addItem("BZD");
        choice2.addItem("CAD");
        choice2.addItem("CDF");
        choice2.addItem("CHF");
        choice2.addItem("CLP");
        choice2.addItem("CNY");
        choice2.addItem("COP");
        choice2.addItem("CRC");
        choice2.addItem("CUP");
        choice2.addItem("CVE");
        choice2.addItem("CZK");
        choice2.addItem("DJF");
        choice2.addItem("DKK");
        choice2.addItem("DOP");
        choice2.addItem("DZD");
        choice2.addItem("EGP");
        choice2.addItem("ERN");
        choice2.addItem("ETB");
        choice2.addItem("EUR");
        choice2.addItem("FJD");
        choice2.addItem("FKP");
        choice2.addItem("FOK");
        choice2.addItem("GBP");
        choice2.addItem("GEL");
        choice2.addItem("GGP");
        choice2.addItem("GHS");
        choice2.addItem("GIP");
        choice2.addItem("GMD");
        choice2.addItem("GNF");
        choice2.addItem("GTQ");
        choice2.addItem("GYD");
        choice2.addItem("HKD");
        choice2.addItem("HNL");
        choice2.addItem("HRK");
        choice2.addItem("HTG");
        choice2.addItem("HUF");
        choice2.addItem("IDR");
        choice2.addItem("ILS");
        choice2.addItem("IMP");
        choice2.addItem("INR");
        choice2.addItem("IQD");
        choice2.addItem("IRR");
        choice2.addItem("ISK");
        choice2.addItem("JEP");
        choice2.addItem("JMD");
        choice2.addItem("JOD");
        choice2.addItem("JPY");
        choice2.addItem("KES");
        choice2.addItem("KGS");
        choice2.addItem("KHR");
        choice2.addItem("KID");
        choice2.addItem("KMF");
        choice2.addItem("KRW");
        choice2.addItem("KWD");
        choice2.addItem("KYD");
        choice2.addItem("KZT");
        choice2.addItem("LAK");
        choice2.addItem("LBP");
        choice2.addItem("LKR");
        choice2.addItem("LRD");
        choice2.addItem("LSL");
        choice2.addItem("LYD");
        choice2.addItem("MAD");
        choice2.addItem("MDL");
        choice2.addItem("MGA");
        choice2.addItem("MKD");
        choice2.addItem("MMK");
        choice2.addItem("MNT");
        choice2.addItem("MOP");
        choice2.addItem("MRU");
        choice2.addItem("MUR");
        choice2.addItem("MVR");
        choice2.addItem("MWK");
        choice2.addItem("MXN");
        choice2.addItem("MYR");
        choice2.addItem("MZN");
        choice2.addItem("NAD");
        choice2.addItem("NGN");
        choice2.addItem("NIO");
        choice2.addItem("NOK");
        choice2.addItem("NPR");
        choice2.addItem("NZD");
        choice2.addItem("OMR");
        choice2.addItem("PAB");
        choice2.addItem("PEN");
        choice2.addItem("PGK");
        choice2.addItem("PHP");
        choice2.addItem("PKR");
        choice2.addItem("PLN");
        choice2.addItem("PYG");
        choice2.addItem("QAR");
        choice2.addItem("RON");
        choice2.addItem("RSD");
        choice2.addItem("RUB");
        choice2.addItem("RWF");
        choice2.addItem("SAR");
        choice2.addItem("SBD");
        choice2.addItem("SCR");
        choice2.addItem("SDG");
        choice2.addItem("SEK");
        choice2.addItem("SGD");
        choice2.addItem("SHP");
        choice2.addItem("SLE");
        choice2.addItem("SLL");
        choice2.addItem("SOS");
        choice2.addItem("SRD");
        choice2.addItem("SSP");
        choice2.addItem("STN");
        choice2.addItem("SYP");
        choice2.addItem("SZL");
        choice2.addItem("THB");
        choice2.addItem("TJS");
        choice2.addItem("TMT");
        choice2.addItem("TND");
        choice2.addItem("TOP");
        choice2.addItem("TRY");
        choice2.addItem("TTD");
        choice2.addItem("TVD");
        choice2.addItem("TWD");
        choice2.addItem("TZS");
        choice2.addItem("UAH");
        choice2.addItem("UGX");
        choice2.addItem("USD");
        choice2.addItem("UYU");
        choice2.addItem("UZS");
        choice2.addItem("VES");
        choice2.addItem("VND");
        choice2.addItem("VUV");
        choice2.addItem("WST");
        choice2.addItem("XAF");
        choice2.addItem("XCD");
        choice2.addItem("XDR");
        choice2.addItem("XOF");
        choice2.addItem("XPF");
        choice2.addItem("YER");
        choice2.addItem("ZAR");
        choice2.addItem("ZMW");
        choice2.addItem("ZWL");

        ButtonConversion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ButtonConversion.setFont(new java.awt.Font("Ebrima", 0, 24)); // NOI18N
        ButtonConversion.setLabel("Convertir");
        ButtonConversion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonConversionActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("El tipo de cambio es:");

        jLabel3.setText("Cantidad:");

        jLabel4.setText("A:");

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Conversor Automático");
        jLabel5.setAlignmentY(0.0F);
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("DE:");

        choice1.addItem("AED");
        choice1.addItem("AFN");
        choice1.addItem("ALL");
        choice1.addItem("AMD");
        choice1.addItem("ANG");
        choice1.addItem("AOA");
        choice1.addItem("ARS");
        choice1.addItem("AUD");
        choice1.addItem("AWG");
        choice1.addItem("AZN");
        choice1.addItem("BAM");
        choice1.addItem("BBD");
        choice1.addItem("BDT");
        choice1.addItem("BGN");
        choice1.addItem("BHD");
        choice1.addItem("BIF");
        choice1.addItem("BMD");
        choice1.addItem("BND");
        choice1.addItem("BOB");
        choice1.addItem("BRL");
        choice1.addItem("BSD");
        choice1.addItem("BTN");
        choice1.addItem("BWP");
        choice1.addItem("BYN");
        choice1.addItem("BZD");
        choice1.addItem("CAD");
        choice1.addItem("CDF");
        choice1.addItem("CHF");
        choice1.addItem("CLP");
        choice1.addItem("CNY");
        choice1.addItem("COP");
        choice1.addItem("CRC");
        choice1.addItem("CUP");
        choice1.addItem("CVE");
        choice1.addItem("CZK");
        choice1.addItem("DJF");
        choice1.addItem("DKK");
        choice1.addItem("DOP");
        choice1.addItem("DZD");
        choice1.addItem("EGP");
        choice1.addItem("ERN");
        choice1.addItem("ETB");
        choice1.addItem("EUR");
        choice1.addItem("FJD");
        choice1.addItem("FKP");
        choice1.addItem("FOK");
        choice1.addItem("GBP");
        choice1.addItem("GEL");
        choice1.addItem("GGP");
        choice1.addItem("GHS");
        choice1.addItem("GIP");
        choice1.addItem("GMD");
        choice1.addItem("GNF");
        choice1.addItem("GTQ");
        choice1.addItem("GYD");
        choice1.addItem("HKD");
        choice1.addItem("HNL");
        choice1.addItem("HRK");
        choice1.addItem("HTG");
        choice1.addItem("HUF");
        choice1.addItem("IDR");
        choice1.addItem("ILS");
        choice1.addItem("IMP");
        choice1.addItem("INR");
        choice1.addItem("IQD");
        choice1.addItem("IRR");
        choice1.addItem("ISK");
        choice1.addItem("JEP");
        choice1.addItem("JMD");
        choice1.addItem("JOD");
        choice1.addItem("JPY");
        choice1.addItem("KES");
        choice1.addItem("KGS");
        choice1.addItem("KHR");
        choice1.addItem("KID");
        choice1.addItem("KMF");
        choice1.addItem("KRW");
        choice1.addItem("KWD");
        choice1.addItem("KYD");
        choice1.addItem("KZT");
        choice1.addItem("LAK");
        choice1.addItem("LBP");
        choice1.addItem("LKR");
        choice1.addItem("LRD");
        choice1.addItem("LSL");
        choice1.addItem("LYD");
        choice1.addItem("MAD");
        choice1.addItem("MDL");
        choice1.addItem("MGA");
        choice1.addItem("MKD");
        choice1.addItem("MMK");
        choice1.addItem("MNT");
        choice1.addItem("MOP");
        choice1.addItem("MRU");
        choice1.addItem("MUR");
        choice1.addItem("MVR");
        choice1.addItem("MWK");
        choice1.addItem("MXN");
        choice1.addItem("MYR");
        choice1.addItem("MZN");
        choice1.addItem("NAD");
        choice1.addItem("NGN");
        choice1.addItem("NIO");
        choice1.addItem("NOK");
        choice1.addItem("NPR");
        choice1.addItem("NZD");
        choice1.addItem("OMR");
        choice1.addItem("PAB");
        choice1.addItem("PEN");
        choice1.addItem("PGK");
        choice1.addItem("PHP");
        choice1.addItem("PKR");
        choice1.addItem("PLN");
        choice1.addItem("PYG");
        choice1.addItem("QAR");
        choice1.addItem("RON");
        choice1.addItem("RSD");
        choice1.addItem("RUB");
        choice1.addItem("RWF");
        choice1.addItem("SAR");
        choice1.addItem("SBD");
        choice1.addItem("SCR");
        choice1.addItem("SDG");
        choice1.addItem("SEK");
        choice1.addItem("SGD");
        choice1.addItem("SHP");
        choice1.addItem("SLE");
        choice1.addItem("SLL");
        choice1.addItem("SOS");
        choice1.addItem("SRD");
        choice1.addItem("SSP");
        choice1.addItem("STN");
        choice1.addItem("SYP");
        choice1.addItem("SZL");
        choice1.addItem("THB");
        choice1.addItem("TJS");
        choice1.addItem("TMT");
        choice1.addItem("TND");
        choice1.addItem("TOP");
        choice1.addItem("TRY");
        choice1.addItem("TTD");
        choice1.addItem("TVD");
        choice1.addItem("TWD");
        choice1.addItem("TZS");
        choice1.addItem("UAH");
        choice1.addItem("UGX");
        choice1.addItem("USD");
        choice1.addItem("UYU");
        choice1.addItem("UZS");
        choice1.addItem("VES");
        choice1.addItem("VND");
        choice1.addItem("VUV");
        choice1.addItem("WST");
        choice1.addItem("XAF");
        choice1.addItem("XCD");
        choice1.addItem("XDR");
        choice1.addItem("XOF");
        choice1.addItem("XPF");
        choice1.addItem("YER");
        choice1.addItem("ZAR");
        choice1.addItem("ZMW");
        choice1.addItem("ZWL");

        textCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCantidadActionPerformed(evt);
            }
        });

        textResult.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        ButtonConversion1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ButtonConversion1.setFont(new java.awt.Font("Ebrima", 0, 24)); // NOI18N
        ButtonConversion1.setLabel("Salir");
        ButtonConversion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonConversion1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(ButtonConversion, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(textResult, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addComponent(ButtonConversion1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(textCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textResult, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonConversion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonConversion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 89, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Labelusd, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelEUR, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelGBP, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelAUD, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelJPY, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resGbp, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resAud, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resJpy, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(157, 157, 157))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resEur, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resUsd, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Labelusd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelEUR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelGBP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelAUD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelJPY))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(resUsd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resEur))
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resGbp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resAud)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resJpy)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        ejecucionCotizaciones();
        actualizarCartelera();
    }//GEN-LAST:event_button1ActionPerformed

    private void ButtonConversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonConversionActionPerformed
        Conversion(choice1.getSelectedItem(), choice2.getSelectedItem(), textCantidad.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonConversionActionPerformed

    private void textCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCantidadActionPerformed

    private void ButtonConversion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonConversion1ActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonConversion1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JP_Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JP_Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JP_Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JP_Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        try {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new JP_Conversor().setVisible(true);
                }
            });
        } catch (Exception e) {
            System.out.println("Error " + e.getMessage());

        }
    }

    public void setResAud(JLabel resAud) {
        this.resAud = resAud;
    }

    public void setResEur(JLabel resEur) {
        this.resEur = resEur;
    }

    public void setResGbp(JLabel resGbp) {
        this.resGbp = resGbp;
    }

    public void setResJpy(JLabel resJpy) {
        this.resJpy = resJpy;
    }

    public void setResUsd(JLabel resUsd) {
        this.resUsd = resUsd;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button ButtonConversion;
    private java.awt.Button ButtonConversion1;
    private javax.swing.JLabel LabelAUD;
    private javax.swing.JLabel LabelEUR;
    private javax.swing.JLabel LabelGBP;
    private javax.swing.JLabel LabelJPY;
    private javax.swing.JLabel Labelusd;
    private java.awt.Button button1;
    private java.awt.Choice choice1;
    private java.awt.Choice choice2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel resAud;
    private javax.swing.JLabel resEur;
    private javax.swing.JLabel resGbp;
    private javax.swing.JLabel resJpy;
    private javax.swing.JLabel resUsd;
    private java.awt.TextField textCantidad;
    private javax.swing.JLabel textResult;
    // End of variables declaration//GEN-END:variables
}
